{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\src\\\\BlueprintOverview.js\";\nimport React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport CreateModal from \"./CreateModal\";\nimport Blueprint from \"./Blueprint\";\nimport { examples } from \"./examples\";\n\nvar BlueprintOverview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BlueprintOverview, _React$Component);\n\n  function BlueprintOverview() {\n    var _this;\n\n    _classCallCheck(this, BlueprintOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlueprintOverview).call(this));\n    _this.state = {\n      blueprints: []\n    };\n    _this.createBlueprint = _this.createBlueprint.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editBlueprint = _this.editBlueprint.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteBlueprint = _this.deleteBlueprint.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BlueprintOverview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Here goes a GET call to server for all existing blueprints.\n      this.setState({\n        blueprints: examples\n      });\n    }\n  }, {\n    key: \"createBlueprint\",\n    value: function createBlueprint(childState) {\n      var input = _objectSpread({}, childState, {\n        uuid: uuidv4()\n      }); // const input = {\n      //     name: childState.name,\n      //     uuid: uuidv4(),\n      //     comment: childState.comment,\n      //     commands: childState.commands,\n      //     sensors: childState.sensors,\n      //     attributes: childState.attributes\n      // };\n\n\n      this.setState({\n        blueprints: _toConsumableArray(this.state.blueprints).concat([input])\n      }); //Here goes an ajax call to server to INSERT new blueprint data.\n    }\n  }, {\n    key: \"editBlueprint\",\n    value: function editBlueprint(childState) {\n      var input = _objectSpread({}, childState);\n\n      var blueprints = this.state.blueprints;\n\n      for (var i = 0; i < blueprints.length; i++) {\n        if (blueprints[i].uuid === childState.uuid) {\n          blueprints[i] = input;\n        }\n      }\n\n      this.setState({\n        blueprints: blueprints\n      }); //Here goes an ajax call to server to UPDATE blueprint data.\n    }\n  }, {\n    key: \"deleteBlueprint\",\n    value: function deleteBlueprint(childUuid) {\n      var blueprints = this.state.blueprints.filter(function (obj) {\n        return obj.uuid !== childUuid ? obj : null;\n      });\n      this.setState({\n        blueprints: blueprints\n      }); // Here goes an ajax call to DELETE blueprint from DB\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var allBlueprints = this.state.blueprints.map(function (i, idx) {\n        return React.createElement(Blueprint, {\n          key: idx,\n          blueprintData: i,\n          editBlueprint: _this2.editBlueprint,\n          deleteBlueprint: _this2.deleteBlueprint,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"blueprint-overview-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"BLUEPRINTS\"), \" \", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"MANAGE YOUR DEVICE BLUEPRINTS\"), React.createElement(CreateModal, {\n        createBlueprint: this.createBlueprint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"blueprints-flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, allBlueprints));\n    }\n  }]);\n\n  return BlueprintOverview;\n}(React.Component);\n\nexport { BlueprintOverview as default };","map":{"version":3,"sources":["C:\\Users\\Rodney\\Desktop\\MDB-React-Free-npm\\src\\BlueprintOverview.js"],"names":["React","uuidv4","CreateModal","Blueprint","examples","BlueprintOverview","state","blueprints","createBlueprint","bind","editBlueprint","deleteBlueprint","setState","childState","input","uuid","i","length","childUuid","filter","obj","allBlueprints","map","idx","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nimport CreateModal from \"./CreateModal\";\r\nimport Blueprint from \"./Blueprint\";\r\nimport { examples } from \"./examples\";\r\n\r\nexport default class BlueprintOverview extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { blueprints: [] };\r\n        this.createBlueprint = this.createBlueprint.bind(this);\r\n        this.editBlueprint = this.editBlueprint.bind(this);\r\n        this.deleteBlueprint = this.deleteBlueprint.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Here goes a GET call to server for all existing blueprints.\r\n        this.setState({\r\n            blueprints: examples\r\n        });\r\n    }\r\n\r\n    createBlueprint(childState) {\r\n        const input = {\r\n            ...childState,\r\n            uuid: uuidv4()\r\n        };\r\n        // const input = {\r\n        //     name: childState.name,\r\n        //     uuid: uuidv4(),\r\n        //     comment: childState.comment,\r\n        //     commands: childState.commands,\r\n        //     sensors: childState.sensors,\r\n        //     attributes: childState.attributes\r\n        // };\r\n        this.setState({\r\n            blueprints: [...this.state.blueprints, input]\r\n        });\r\n        //Here goes an ajax call to server to INSERT new blueprint data.\r\n    }\r\n\r\n    editBlueprint(childState) {\r\n        const input = { ...childState };\r\n        let blueprints = this.state.blueprints;\r\n        for (let i = 0; i < blueprints.length; i++) {\r\n            if (blueprints[i].uuid === childState.uuid) {\r\n                blueprints[i] = input;\r\n            }\r\n        }\r\n        this.setState({ blueprints });\r\n        //Here goes an ajax call to server to UPDATE blueprint data.\r\n    }\r\n\r\n    deleteBlueprint(childUuid) {\r\n        const blueprints = this.state.blueprints.filter(obj => {\r\n            return obj.uuid !== childUuid ? obj : null;\r\n        });\r\n        this.setState({ blueprints });\r\n        // Here goes an ajax call to DELETE blueprint from DB\r\n    }\r\n\r\n    render() {\r\n        let allBlueprints = this.state.blueprints.map((i, idx) => {\r\n            return (\r\n                <Blueprint\r\n                    key={idx}\r\n                    blueprintData={i}\r\n                    editBlueprint={this.editBlueprint}\r\n                    deleteBlueprint={this.deleteBlueprint}\r\n                />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"blueprint-overview-component\">\r\n                <h1>BLUEPRINTS</h1> <h2>MANAGE YOUR DEVICE BLUEPRINTS</h2>\r\n                <CreateModal createBlueprint={this.createBlueprint} />\r\n                <div className=\"blueprints-flex-container\">{allBlueprints}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}