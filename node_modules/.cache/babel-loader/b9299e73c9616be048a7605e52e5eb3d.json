{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\src\\\\AddDevices.js\";\nimport React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\n\nvar AddDevices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddDevices, _React$Component);\n\n  function AddDevices(props) {\n    var _this;\n\n    _classCallCheck(this, AddDevices);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddDevices).call(this, props));\n    _this.state = {\n      showModal: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddDevices, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      if (e.target.dataset.cap === \"command\") {\n        var commands = _toConsumableArray(this.state.commands);\n\n        commands[e.target.dataset.id][e.target.className] = e.target.value;\n        this.setState({\n          commands: commands\n        });\n      } else if (e.target.dataset.cap === \"attribute\") {\n        var att = _toConsumableArray(this.state.attributes);\n\n        att[e.target.dataset.id][e.target.className] = e.target.value;\n        this.setState({\n          attributes: att\n        });\n      } else if (e.target.dataset.cap === \"sensor\") {\n        var sensors = _toConsumableArray(this.state.sensors);\n\n        sensors[e.target.dataset.id][e.target.className] = e.target.value;\n        this.setState({\n          sensors: sensors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          commands = _this$state.commands,\n          attributes = _this$state.attributes,\n          sensors = _this$state.sensors;\n      var createBlueprint = this.props.createBlueprint;\n      return React.createElement(\"div\", {\n        className: \"createModal-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Create\"), React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        size: \"fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Blueprint\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.toggle();\n\n          createBlueprint(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Create Blueprint\"))));\n    }\n  }]);\n\n  return AddDevices;\n}(React.Component);\n\nexport { AddDevices as default };","map":{"version":3,"sources":["C:\\Users\\Rodney\\Desktop\\MDB-React-Free-npm\\src\\AddDevices.js"],"names":["React","Button","Modal","ModalBody","ModalHeader","ModalFooter","AddDevices","props","state","showModal","handleChange","bind","setState","e","target","dataset","cap","commands","id","className","value","att","attributes","sensors","createBlueprint","toggle","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\r\n\r\nexport default class AddDevices extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        if (e.target.dataset.cap === \"command\") {\r\n            let commands = [...this.state.commands];\r\n            commands[e.target.dataset.id][e.target.className] = e.target.value;\r\n            this.setState({ commands });\r\n        } else if (e.target.dataset.cap === \"attribute\") {\r\n            let att = [...this.state.attributes];\r\n            att[e.target.dataset.id][e.target.className] = e.target.value;\r\n            this.setState({ attributes: att });\r\n        } else if (e.target.dataset.cap === \"sensor\") {\r\n            let sensors = [...this.state.sensors];\r\n            sensors[e.target.dataset.id][e.target.className] = e.target.value;\r\n            this.setState({ sensors });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { commands, attributes, sensors } = this.state;\r\n        let { createBlueprint } = this.props;\r\n\r\n        return (\r\n            <div className=\"createModal-component\">\r\n                <Button color=\"primary\" onClick={() => this.toggle()}>\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.showModal}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"fluid\"\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>\r\n                        Blueprint\r\n                    </ModalHeader>\r\n                    <ModalBody />\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.toggle()}>\r\n                            Close\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                this.toggle();\r\n                                createBlueprint(this.state);\r\n                            }}\r\n                        >\r\n                            Create Blueprint\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}