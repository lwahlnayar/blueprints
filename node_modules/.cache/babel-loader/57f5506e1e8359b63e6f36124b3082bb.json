{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\src\\\\BlueprintOverview.js\";\nimport React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport CreateModal from \"./CreateModal\";\nimport Blueprint from \"./Blueprint\";\nimport { examples } from \"./examples\";\n\nvar BlueprintOverview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BlueprintOverview, _React$Component);\n\n  function BlueprintOverview() {\n    var _this;\n\n    _classCallCheck(this, BlueprintOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlueprintOverview).call(this));\n    _this.state = {\n      blueprints: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.updateBlueprints = this.updateBlueprints.bind(this);\n\n    return _this;\n  }\n\n  _createClass(BlueprintOverview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //Here goes a GET call to server for all existing blueprints.\n      this.setState({\n        blueprints: examples\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this[e.target.name] = e.target.value;\n    }\n  }, {\n    key: \"updateBlueprints\",\n    value: function updateBlueprints() {\n      var input = {\n        name: this.name,\n        blueprint_uuid: uuidv4(),\n        comment: \"placeholder\",\n        commands: {},\n        sensors: [],\n        attributes: {}\n      };\n      this.setState({\n        blueprints: _toConsumableArray(this.state.blueprints).concat([input])\n      }); //Here goes an ajax call to server to add new blueprints data.\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var allBlueprints = this.state.blueprints.map(function (i) {\n        return React.createElement(Blueprint, {\n          key: i.blueprint_uuid,\n          blueprintData: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"blueprint-overview-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"BLUEPRINTS\"), \" \", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"MANAGE YOUR DEVICE BLUEPRINTS\"), React.createElement(CreateModal, {\n        updateBlueprints: this.updateBlueprints,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"blueprints-flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, allBlueprints));\n    }\n  }]);\n\n  return BlueprintOverview;\n}(React.Component);\n\nexport { BlueprintOverview as default };","map":{"version":3,"sources":["C:\\Users\\Rodney\\Desktop\\MDB-React-Free-npm\\src\\BlueprintOverview.js"],"names":["React","uuidv4","CreateModal","Blueprint","examples","BlueprintOverview","state","blueprints","handleChange","bind","setState","e","target","name","value","input","blueprint_uuid","comment","commands","sensors","attributes","allBlueprints","map","i","updateBlueprints","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;;IAEqBC,iB;;;;;AACjB,+BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB,CAHU,CAIV;;AAJU;AAKb;;;;wCAEmB;AAChB;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,UAAU,EAAEH;AADF,OAAd;AAGH;;;iCAEYO,C,EAAG;AACZ,WAAKA,CAAC,CAACC,MAAF,CAASC,IAAd,IAAsBF,CAAC,CAACC,MAAF,CAASE,KAA/B;AACH;;;uCAEkB;AACf,UAAMC,KAAK,GAAG;AACVF,QAAAA,IAAI,EAAE,KAAKA,IADD;AAEVG,QAAAA,cAAc,EAAEf,MAAM,EAFZ;AAGVgB,QAAAA,OAAO,EAAE,aAHC;AAIVC,QAAAA,QAAQ,EAAE,EAJA;AAKVC,QAAAA,OAAO,EAAE,EALC;AAMVC,QAAAA,UAAU,EAAE;AANF,OAAd;AAQA,WAAKV,QAAL,CAAc;AACVH,QAAAA,UAAU,qBAAM,KAAKD,KAAL,CAAWC,UAAjB,UAA6BQ,KAA7B;AADA,OAAd,EATe,CAaf;AACH;;;6BAEQ;AACL,UAAIM,aAAa,GAAG,KAAKf,KAAL,CAAWC,UAAX,CAAsBe,GAAtB,CAA0B,UAAAC,CAAC,EAAI;AAC/C,eAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,CAAC,CAACP,cAAlB;AAAkC,UAAA,aAAa,EAAEO,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFmB,CAApB;AAIA,aACI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,OACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADxB,EAEI,oBAAC,WAAD;AACI,QAAA,gBAAgB,EAAE,KAAKC,gBAD3B;AAEI,QAAA,YAAY,EAAE,KAAKhB,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAMI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4Ca,aAA5C,CANJ,CADJ;AAUH;;;;EAlD0CrB,KAAK,CAACyB,S;;SAAhCpB,iB","sourcesContent":["import React from \"react\";\r\nimport uuidv4 from \"uuid/v4\";\r\n\r\nimport CreateModal from \"./CreateModal\";\r\nimport Blueprint from \"./Blueprint\";\r\nimport { examples } from \"./examples\";\r\n\r\nexport default class BlueprintOverview extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { blueprints: [] };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        // this.updateBlueprints = this.updateBlueprints.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Here goes a GET call to server for all existing blueprints.\r\n        this.setState({\r\n            blueprints: examples\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this[e.target.name] = e.target.value;\r\n    }\r\n\r\n    updateBlueprints() {\r\n        const input = {\r\n            name: this.name,\r\n            blueprint_uuid: uuidv4(),\r\n            comment: \"placeholder\",\r\n            commands: {},\r\n            sensors: [],\r\n            attributes: {}\r\n        };\r\n        this.setState({\r\n            blueprints: [...this.state.blueprints, input]\r\n        });\r\n\r\n        //Here goes an ajax call to server to add new blueprints data.\r\n    }\r\n\r\n    render() {\r\n        let allBlueprints = this.state.blueprints.map(i => {\r\n            return <Blueprint key={i.blueprint_uuid} blueprintData={i} />;\r\n        });\r\n\r\n        return (\r\n            <div className=\"blueprint-overview-component\">\r\n                <h1>BLUEPRINTS</h1> <h2>MANAGE YOUR DEVICE BLUEPRINTS</h2>\r\n                <CreateModal\r\n                    updateBlueprints={this.updateBlueprints}\r\n                    handleChange={this.handleChange}\r\n                />\r\n                <div className=\"blueprints-flex-container\">{allBlueprints}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}