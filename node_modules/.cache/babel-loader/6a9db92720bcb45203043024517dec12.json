{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\src\\\\CreateModal.js\";\nimport React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\nimport Input from \"./Input\";\n\nvar CreateModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateModal, _React$Component);\n\n  function CreateModal(props) {\n    var _this;\n\n    _classCallCheck(this, CreateModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateModal).call(this, props)); //form input data gets populated in THIS state and sent to parent state\n\n    _this.state = {\n      showModal: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFieldToState = _this.addFieldToState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    SHIIIIIT;\n    return _this;\n  }\n\n  _createClass(CreateModal, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        showModal: !this.state.showModal,\n        name: \"\",\n        comment: \"\",\n        commands: [],\n        attributes: [],\n        sensors: []\n      });\n    }\n  }, {\n    key: \"addFieldToState\",\n    value: function addFieldToState(e) {\n      var placeholder;\n      var objFields = {\n        name: \"\",\n        value: \"\"\n      };\n\n      if (e.target.id === \"add-command\") {\n        placeholder = \"commands\";\n      } else if (e.target.id === \"add-attribute\") {\n        placeholder = \"attributes\";\n        objFields = {\n          name: \"\",\n          value: \"\",\n          data_type: \"\",\n          comment: \"\"\n        };\n      } else {\n        placeholder = \"sensors\";\n      }\n\n      this.setState(_defineProperty({}, placeholder, _toConsumableArray(this.state[placeholder]).concat([objFields])));\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      if ([\"command-name\", \"command-value\"].includes(e.target.className)) {\n        var commands = _toConsumableArray(this.state.commands); // console.log(\"boom!\", e.target.dataset);\n        // commands[e.target.dataset.id][]\n\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.state);\n      var _this$state = this.state,\n          commands = _this$state.commands,\n          attributes = _this$state.attributes,\n          sensors = _this$state.sensors;\n      var updateBlueprints = this.props.updateBlueprints;\n      return React.createElement(\"div\", {\n        className: \"createModal-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Create\"), React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        size: \"fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Blueprint\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"blueprint-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Name\")), React.createElement(\"input\", {\n        name: \"blueprint-name\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(\"input\", {\n        name: \"comment\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            comment: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Commands\")), React.createElement(Button, {\n        color: \"green\",\n        id: \"add-command\",\n        onClick: this.addFieldToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Add Command\"), React.createElement(Input, {\n        capability: commands,\n        type: \"command\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Sensors\")), React.createElement(Button, {\n        color: \"green\",\n        id: \"add-sensor\",\n        onClick: this.addFieldToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Add Sensors\"), React.createElement(Input, {\n        capability: sensors,\n        type: \"sensor\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Attributes\")), React.createElement(Button, {\n        color: \"green\",\n        id: \"add-attribute\",\n        onClick: this.addFieldToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Add Attributes\"), React.createElement(Input, {\n        capability: attributes,\n        type: \"attribute\",\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.toggle();\n\n          updateBlueprints(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Create Blueprint\"))));\n    }\n  }]);\n\n  return CreateModal;\n}(React.Component);\n\nexport { CreateModal as default };","map":{"version":3,"sources":["C:\\Users\\Rodney\\Desktop\\MDB-React-Free-npm\\src\\CreateModal.js"],"names":["React","Button","Modal","ModalBody","ModalHeader","ModalFooter","Input","CreateModal","props","state","showModal","handleChange","bind","addFieldToState","SHIIIIIT","setState","name","comment","commands","attributes","sensors","e","placeholder","objFields","value","target","id","data_type","includes","className","updateBlueprints","toggle","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\r\n\r\nimport Input from \"./Input\";\r\n\r\nexport default class CreateModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //form input data gets populated in THIS state and sent to parent state\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addFieldToState = this.addFieldToState.bind(this);\r\n        SHIIIIIT;\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            showModal: !this.state.showModal,\r\n            name: \"\",\r\n            comment: \"\",\r\n            commands: [],\r\n            attributes: [],\r\n            sensors: []\r\n        });\r\n    }\r\n\r\n    addFieldToState(e) {\r\n        let placeholder;\r\n        let objFields = { name: \"\", value: \"\" };\r\n        if (e.target.id === \"add-command\") {\r\n            placeholder = \"commands\";\r\n        } else if (e.target.id === \"add-attribute\") {\r\n            placeholder = \"attributes\";\r\n            objFields = { name: \"\", value: \"\", data_type: \"\", comment: \"\" };\r\n        } else {\r\n            placeholder = \"sensors\";\r\n        }\r\n        this.setState({\r\n            [placeholder]: [...this.state[placeholder], objFields]\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        if ([\"command-name\", \"command-value\"].includes(e.target.className)) {\r\n            let commands = [...this.state.commands];\r\n            // console.log(\"boom!\", e.target.dataset);\r\n            // commands[e.target.dataset.id][]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        let { commands, attributes, sensors } = this.state;\r\n        let { updateBlueprints } = this.props;\r\n\r\n        return (\r\n            <div className=\"createModal-component\">\r\n                <Button color=\"primary\" onClick={() => this.toggle()}>\r\n                    Create\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.showModal}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"fluid\"\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>\r\n                        Blueprint\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div>\r\n                            <strong>\r\n                                <label htmlFor=\"blueprint-name\">Name</label>\r\n                            </strong>\r\n                            <input\r\n                                name=\"blueprint-name\"\r\n                                onChange={e => {\r\n                                    this.setState({ name: e.target.value });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <strong>\r\n                                <label htmlFor=\"comment\">Comment</label>\r\n                            </strong>\r\n                            <input\r\n                                name=\"comment\"\r\n                                onChange={e => {\r\n                                    this.setState({ comment: e.target.value });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <strong>\r\n                                <p>Commands</p>\r\n                            </strong>\r\n                            <Button\r\n                                color=\"green\"\r\n                                id=\"add-command\"\r\n                                onClick={this.addFieldToState}\r\n                            >\r\n                                Add Command\r\n                            </Button>\r\n                            <Input\r\n                                capability={commands}\r\n                                type={\"command\"}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <strong>\r\n                                <p>Sensors</p>\r\n                            </strong>\r\n                            <Button\r\n                                color=\"green\"\r\n                                id=\"add-sensor\"\r\n                                onClick={this.addFieldToState}\r\n                            >\r\n                                Add Sensors\r\n                            </Button>\r\n                            <Input\r\n                                capability={sensors}\r\n                                type={\"sensor\"}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <strong>\r\n                                <p>Attributes</p>\r\n                            </strong>\r\n                            <Button\r\n                                color=\"green\"\r\n                                id=\"add-attribute\"\r\n                                onClick={this.addFieldToState}\r\n                            >\r\n                                Add Attributes\r\n                            </Button>\r\n                            <Input\r\n                                capability={attributes}\r\n                                type={\"attribute\"}\r\n                                handleChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.toggle()}>\r\n                            Close\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                                this.toggle();\r\n                                updateBlueprints(this.state);\r\n                            }}\r\n                        >\r\n                            Create Blueprint\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}