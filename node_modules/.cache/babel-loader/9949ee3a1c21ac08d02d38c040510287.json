{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\Desktop\\\\MDB-React-Free-npm\\\\src\\\\DevicesOverview.js\";\nimport React from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\nimport Device from \"./Device\";\n\nvar DevicesOverview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DevicesOverview, _React$Component);\n\n  function DevicesOverview(props) {\n    var _this;\n\n    _classCallCheck(this, DevicesOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DevicesOverview).call(this, props));\n    _this.state = _objectSpread({}, _this.props.blueprintData, {\n      devices: []\n    });\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addDevice = _this.addDevice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editAttributes = _this.editAttributes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteDevice = _this.deleteDevice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //componentDidMount ajax call to server to retrieve devices based on a unique blueprint ID\n\n\n  _createClass(DevicesOverview, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        input: e.target.value\n      });\n    }\n  }, {\n    key: \"addDevice\",\n    value: function addDevice() {\n      var length = this.state.devices.length;\n      var input = {\n        identifier: this.state.input,\n        owner: \"john@doe.com\",\n        activity: \"No activities yet\",\n        registered: false,\n        device_att: [],\n        id: length === 0 ? 0 : this.state.devices[length - 1].id + 1\n      };\n      this.setState({\n        input: \"\",\n        devices: _toConsumableArray(this.state.devices).concat([input])\n      }); //Here goes an Ajax call to INSERT device into DB\n    }\n  }, {\n    key: \"editAttributes\",\n    value: function editAttributes() {}\n  }, {\n    key: \"deleteDevice\",\n    value: function deleteDevice(childProps) {\n      var devices = this.state.devices.filter(function (obj) {\n        if (obj.id !== childProps) {\n          return obj;\n        }\n\n        return null;\n      });\n      this.setState({\n        devices: devices\n      }); // Here goes an ajax call to DELETE blueprint from DB\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          attributes = _this$state.attributes,\n          id = _this$state.id;\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"createModal-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"blue\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Add Devices\"), React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        size: \"fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: function toggle() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Details for Blueprint:\", React.createElement(\"span\", {\n        id: \"bp-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", name)), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Register device\"), React.createElement(\"input\", {\n        name: \"register\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"green\",\n        onClick: this.addDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Device, {\n        devices: this.state.devices,\n        attributes: attributes,\n        id: id,\n        deleteDevice: this.deleteDevice,\n        editAttributes: this.editAttributes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Back to Blueprint\"))));\n    }\n  }]);\n\n  return DevicesOverview;\n}(React.Component);\n\nexport { DevicesOverview as default };","map":{"version":3,"sources":["C:\\Users\\Rodney\\Desktop\\MDB-React-Free-npm\\src\\DevicesOverview.js"],"names":["React","Button","Modal","ModalBody","ModalHeader","ModalFooter","Device","DevicesOverview","props","state","blueprintData","devices","handleChange","bind","addDevice","editAttributes","deleteDevice","setState","showModal","e","input","target","value","length","identifier","owner","activity","registered","device_att","id","childProps","filter","obj","name","attributes","console","log","toggle","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter } from \"mdbreact\";\r\n\r\nimport Device from \"./Device\";\r\n\r\nexport default class DevicesOverview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.props.blueprintData,\r\n            devices: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addDevice = this.addDevice.bind(this);\r\n        this.editAttributes = this.editAttributes.bind(this);\r\n        this.deleteDevice = this.deleteDevice.bind(this);\r\n    }\r\n\r\n    //componentDidMount ajax call to server to retrieve devices based on a unique blueprint ID\r\n\r\n    toggle() {\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ input: e.target.value });\r\n    }\r\n\r\n    addDevice() {\r\n        let length = this.state.devices.length;\r\n        let input = {\r\n            identifier: this.state.input,\r\n            owner: \"john@doe.com\",\r\n            activity: \"No activities yet\",\r\n            registered: false,\r\n            device_att: [],\r\n            id: length === 0 ? 0 : this.state.devices[length - 1].id + 1\r\n        };\r\n        this.setState({ input: \"\", devices: [...this.state.devices, input] });\r\n        //Here goes an Ajax call to INSERT device into DB\r\n    }\r\n\r\n    editAttributes() {}\r\n\r\n    deleteDevice(childProps) {\r\n        const devices = this.state.devices.filter(obj => {\r\n            if (obj.id !== childProps) {\r\n                return obj;\r\n            }\r\n            return null;\r\n        });\r\n        this.setState({ devices });\r\n        // Here goes an ajax call to DELETE blueprint from DB\r\n    }\r\n\r\n    render() {\r\n        let { name, attributes, id } = this.state;\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <div className=\"createModal-component\">\r\n                <Button color=\"blue\" onClick={() => this.toggle()}>\r\n                    Add Devices\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.showModal}\r\n                    toggle={() => this.toggle()}\r\n                    size=\"fluid\"\r\n                >\r\n                    <ModalHeader toggle={() => this.toggle()}>\r\n                        Details for Blueprint:<span id=\"bp-font\"> {name}</span>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <h5>Register device</h5>\r\n                        <input name=\"register\" onChange={this.handleChange} />\r\n                        <Button color=\"green\" onClick={this.addDevice}>\r\n                            Register\r\n                        </Button>\r\n                        <Device\r\n                            devices={this.state.devices}\r\n                            attributes={attributes}\r\n                            id={id}\r\n                            deleteDevice={this.deleteDevice}\r\n                            editAttributes={this.editAttributes}\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.toggle()}>\r\n                            Back to Blueprint\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}